{
  "created_at": "2023-05-24T19:16:36+02:00",
  "api_model": {},
  "api_definition": {
    "api_id": "58b4ed3105874c8457700e002866ee9f",
    "jwt_issued_at_validation_skew": 0,
    "upstream_certificates": {},
    "use_keyless": true,
    "enable_coprocess_auth": false,
    "base_identity_provided_by": "",
    "custom_middleware": {
      "pre": [],
      "post": [],
      "post_key_auth": [],
      "auth_check": {
        "disabled": false,
        "name": "",
        "path": "",
        "require_session": false,
        "raw_body_only": false
      },
      "response": [],
      "driver": "",
      "id_extractor": {
        "disabled": false,
        "extract_from": "",
        "extract_with": "",
        "extractor_config": {}
      }
    },
    "disable_quota": false,
    "custom_middleware_bundle": "",
    "cache_options": {
      "cache_timeout": 60,
      "enable_cache": true,
      "cache_all_safe_requests": false,
      "cache_response_codes": [],
      "enable_upstream_cache_control": false,
      "cache_control_ttl_header": "",
      "cache_by_headers": []
    },
    "enable_ip_blacklisting": false,
    "tag_headers": [],
    "jwt_scope_to_policy_mapping": {},
    "pinned_public_keys": {},
    "expire_analytics_after": 0,
    "external_oauth": {
      "enabled": false,
      "providers": []
    },
    "domain": "",
    "openid_options": {
      "providers": [],
      "segregate_by_client": false
    },
    "jwt_policy_field_name": "",
    "enable_proxy_protocol": false,
    "jwt_default_policies": [],
    "active": true,
    "jwt_expires_at_validation_skew": 0,
    "config_data": {},
    "notifications": {
      "shared_secret": "",
      "oauth_on_keychange_url": ""
    },
    "jwt_client_base_field": "",
    "auth": {
      "disable_header": false,
      "auth_header_name": "Authorization",
      "cookie_name": "",
      "name": "",
      "validate_signature": false,
      "use_param": false,
      "signature": {
        "algorithm": "",
        "header": "",
        "use_param": false,
        "param_name": "",
        "secret": "",
        "allowed_clock_skew": 0,
        "error_code": 0,
        "error_message": ""
      },
      "use_cookie": false,
      "param_name": "",
      "use_certificate": false
    },
    "check_host_against_uptime_tests": false,
    "auth_provider": {
      "name": "",
      "storage_engine": "",
      "meta": {}
    },
    "custom_plugin_auth_enabled": false,
    "blacklisted_ips": [],
    "graphql": {
      "schema": "type Query {\n  conference(id: ID!): Conference!\n  conferences: [Conference!]!\n  allConferences: [Conference!]! @deprecated(reason: \"Use `conferences` instead\")\n  contact(conferenceId: ID!, contactName: String!): Contact!\n  locations: [Location!]!\n  people: [Contact!]!\n  sponsors: [Contact!]!\n  interval(intervalTitle: String!, conferenceId: ID!): Interval!\n  schedule(day: String!, conferenceId: ID!): Schedule!\n  series(id: ID!): Series!\n  allSeries: [Series!]!\n  themes: [Theme!]!\n  theme(conferenceId: ID!): Theme!\n}\n\ntype Conference {\n  id: ID!\n  series: Series!\n  name: String!\n  organizer: Contact!\n  year: String!\n  startDate: String!\n  endDate: String!\n  slogan: String!\n  websiteUrl: String!\n  locations: [Location!]\n  organizers: [Contact!]!\n  mcs: [Contact!]\n  partners: [Contact!]\n  sponsors: [Contact!]!\n  goldSponsors: [Contact!]\n  silverSponsors: [Contact!]\n  bronzeSponsors: [Contact!]\n  platformSponsors: [Contact!]\n  schedules: [Schedule!]!\n  allSpeakers: [Contact!]\n  speakers: [Contact!]\n  keynoteSpeakers: [Contact!]\n  fullTalkSpeakers: [Contact!]\n  lightningTalkSpeakers: [Contact!]\n  workshopInstructors: [Contact!]\n  talks: [Session!]\n  workshops: [Session!]\n  attendees: [Contact!]!\n  keynotes: [Session!]!\n  fullTalks: [Session!]!\n  lightningTalks: [Session!]!\n}\n\ntype Series {\n  id: ID!\n  name: String!\n  conferences: [Conference!]!\n}\n\ntype Contact {\n  firstName: String!\n  lastName: String!\n  name: String!\n  about: String!\n  aboutShort: String\n  company: String\n  tagline: String\n  image: Image!\n  type: [ContactType!]!\n  social: Social!\n  keywords: [String!]\n  location: Location!\n  talks: [Session!]\n  workshops: [Session!]\n  noPhotography: Boolean\n  country: Country! @deprecated(reason: \"Use `location` instead\")\n}\n\ntype Image {\n  url: String!\n  title: String\n  style: Style\n}\n\ntype Style {\n  backgroundSize: String!\n}\n\n\"\"\"Type of the contact\"\"\"\nenum ContactType {\n  PRESS\n  SPEAKER\n  TALK\n  LIGHTNING_TALK\n  KEYNOTE\n  WORKSHOP\n  WORKSHOP_HOST\n  ORGANIZER\n  SPONSOR\n  GOLD_SPONSOR\n  SILVER_SPONSOR\n  BRONZE_SPONSOR\n  PLATFORM_SPONSOR\n  PARTNER\n  ATTENDEE\n}\n\ntype Social {\n  homepage: String\n  mastodon: String\n  twitter: String\n  github: String\n  facebook: String\n  googleMaps: String\n  medium: String\n  instagram: String\n  linkedin: String\n  youtube: String\n  vk: String\n  pinterest: String\n  vimeo: String\n  dribble: String\n  devto: String\n  twitch: String\n}\n\ntype Location {\n  name: String\n  about: String\n  image: Image\n  social: Social\n  country: Country\n  city: String\n  address: String\n}\n\ntype Country {\n  name: String!\n  code: String!\n  flag: String\n}\n\ntype Session {\n  type: SessionType!\n  level: Level!\n  title: String!\n  hasTitle: Boolean!\n  description: String\n  keywords: [String!]\n  location: Location\n  people: [Contact!]\n  urls: SessionUrls\n  sessions: [Session!]\n  parent: Interval!\n  day: String\n  begin: String\n  end: String\n  speakers: [Contact!]! @deprecated(reason: \"Use `people` instead\")\n}\n\n\"\"\"Type of the session\"\"\"\nenum SessionType {\n  TALK\n  LIGHTNING_TALK\n  KEYNOTE\n  WORKSHOP\n  PANEL\n  BREAKFAST\n  LUNCH\n  COFFEE_BREAK\n  ORGANIZATIONAL\n  PARTY\n}\n\n\"\"\"Level of the session\"\"\"\nenum Level {\n  BEGINNER\n  INTERMEDIATE\n  ADVANCED\n}\n\ntype SessionUrls {\n  web: String\n  slides: String\n  video: String\n  demo: String\n  drawing: String\n}\n\ntype Interval {\n  begin: String!\n  end: String!\n  title: String\n  sessions: [Session!]!\n  location: Location\n  mc: Contact\n  urls: SessionUrls\n  drawing: String\n}\n\ntype Schedule {\n  day: String!\n  location: Location\n  description: String\n  intervals: [Interval!]!\n}\n\ntype Theme {\n  id: ID!\n  fonts: Fonts!\n  textures: [Image!]!\n  colors: Colors!\n  logos: Logos!\n}\n\ntype Fonts {\n  primary: String!\n  secondary: String!\n  variants: [Font!]!\n}\n\ntype Font {\n  family: String\n  weight: String\n  style: String\n  fileName: String\n  formats: [String!]\n  href: String\n}\n\ntype Colors {\n  primary: String!\n  secondary: String!\n  text: String!\n  background: String!\n}\n\ntype Logos {\n  black: WithWithoutText!\n  colored: WithWithoutText!\n  white: WithWithoutText!\n}\n\ntype WithWithoutText {\n  withoutText: Image!\n  withText: Image!\n}",
      "enabled": true,
      "engine": {
        "field_configs": [
          {
            "type_name": "Query",
            "field_name": "conferences",
            "disable_default_mapping": false,
            "path": [
              "conferences"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "conference",
            "disable_default_mapping": false,
            "path": [
              "conference"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "allConferences",
            "disable_default_mapping": false,
            "path": [
              "allConferences"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "locations",
            "disable_default_mapping": false,
            "path": [
              "locations"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "people",
            "disable_default_mapping": false,
            "path": [
              "people"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "sponsors",
            "disable_default_mapping": false,
            "path": [
              "sponsors"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "interval",
            "disable_default_mapping": false,
            "path": [
              "interval"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "schedule",
            "disable_default_mapping": false,
            "path": [
              "schedule"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "series",
            "disable_default_mapping": false,
            "path": [
              "series"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "allSeries",
            "disable_default_mapping": false,
            "path": [
              "allSeries"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "themes",
            "disable_default_mapping": false,
            "path": [
              "themes"
            ]
          },
          {
            "type_name": "Query",
            "field_name": "theme",
            "disable_default_mapping": false,
            "path": [
              "theme"
            ]
          },
          {
            "type_name": "Country",
            "field_name": "capital",
            "disable_default_mapping": false,
            "path": [
              "data",
              "country",
              "capital"
            ]
          },
          {
            "type_name": "Country",
            "field_name": "currency",
            "disable_default_mapping": false,
            "path": [
              "data",
              "country",
              "currency"
            ]
          },
          {
            "type_name": "Country",
            "field_name": "flag",
            "disable_default_mapping": false,
            "path": [
              "data",
              "country",
              "emoji"
            ]
          }
        ],
        "data_sources": [
          {
            "kind": "GraphQL",
            "name": "react-conferences-api",
            "internal": false,
            "root_fields": [
              {
                "type": "Query",
                "fields": [
                  "conferences",
                  "conference",
                  "allConferences",
                  "contact",
                  "locations",
                  "people",
                  "sponsors",
                  "interval",
                  "schedule",
                  "series",
                  "allSeries",
                  "themes",
                  "theme"
                ]
              }
            ],
            "config": {
              "url": "https://api.react-finland.fi/graphql",
              "method": "POST",
              "body": "",
              "headers": {}
            }
          },
          {
            "kind": "GraphQL",
            "name": "currency",
            "internal": false,
            "root_fields": [
              {
                "type": "Country",
                "fields": [
                  "capital",
                  "currency",
                  "flag"
                ]
              }
            ],
            "config": {
              "url": "https://countries.trevorblades.com/",
              "method": "POST",
              "body": "",
              "operation": "query ($countryCode: ID!) {\n  country(code: $countryCode) {\n    emoji\n  }\n}",
              "has_operation": true,
              "variables": {
                "countryCode": "{{.object.code}}"
              },
              "headers": {}
            }
          }
        ]
      },
      "type_field_configurations": [],
      "execution_mode": "executionEngine",
      "proxy": {
        "auth_headers": {},
        "request_headers": {}
      },
      "subgraph": {
        "sdl": ""
      },
      "supergraph": {
        "subgraphs": [],
        "merged_sdl": "",
        "global_headers": {},
        "disable_query_batching": false
      },
      "version": "2",
      "playground": {
        "enabled": false,
        "path": ""
      },
      "last_schema_update": "2023-05-24T19:47:25.628+02:00"
    },
    "hmac_allowed_clock_skew": -1,
    "dont_set_quota_on_create": false,
    "uptime_tests": {
      "check_list": [],
      "config": {
        "expire_utime_after": 0,
        "service_discovery": {
          "use_discovery_service": false,
          "query_endpoint": "",
          "use_nested_query": false,
          "parent_data_path": "",
          "data_path": "",
          "cache_timeout": 60
        },
        "recheck_wait": 0
      }
    },
    "enable_jwt": false,
    "do_not_track": false,
    "name": "react-conferences",
    "slug": "react-conferences",
    "analytics_plugin": {},
    "oauth_meta": {
      "allowed_access_types": [],
      "allowed_authorize_types": [],
      "auth_login_redirect": ""
    },
    "CORS": {
      "enable": false,
      "max_age": 24,
      "allow_credentials": false,
      "exposed_headers": [],
      "allowed_headers": [
        "Origin",
        "Accept",
        "Content-Type",
        "X-Requested-With",
        "Authorization"
      ],
      "options_passthrough": false,
      "debug": false,
      "allowed_origins": [
        "*"
      ],
      "allowed_methods": [
        "GET",
        "POST",
        "HEAD"
      ]
    },
    "event_handlers": {
      "events": {}
    },
    "proxy": {
      "target_url": "",
      "service_discovery": {
        "endpoint_returns_list": false,
        "cache_timeout": 0,
        "parent_data_path": "",
        "query_endpoint": "",
        "use_discovery_service": false,
        "_sd_show_port_path": false,
        "target_path": "",
        "use_target_list": false,
        "use_nested_query": false,
        "cache_disabled": false,
        "data_path": "",
        "port_data_path": ""
      },
      "check_host_against_uptime_tests": false,
      "transport": {
        "ssl_insecure_skip_verify": false,
        "ssl_ciphers": [],
        "ssl_min_version": 0,
        "ssl_max_version": 0,
        "ssl_force_common_name_check": false,
        "proxy_url": ""
      },
      "target_list": [],
      "preserve_host_header": false,
      "strip_listen_path": true,
      "enable_load_balancing": false,
      "listen_path": "/react-conferences/",
      "disable_strip_slash": true
    },
    "client_certificates": [],
    "use_basic_auth": false,
    "version_data": {
      "not_versioned": true,
      "default_version": "",
      "versions": {
        "Default": {
          "name": "Default",
          "expires": "",
          "paths": {
            "ignored": [],
            "white_list": [],
            "black_list": []
          },
          "use_extended_paths": true,
          "extended_paths": {
            "ignored": [],
            "white_list": [],
            "black_list": [],
            "transform": [],
            "transform_response": [],
            "transform_jq": [],
            "transform_jq_response": [],
            "transform_headers": [],
            "transform_response_headers": [],
            "hard_timeouts": [],
            "circuit_breakers": [],
            "url_rewrites": [],
            "virtual": [],
            "size_limits": [],
            "method_transforms": [],
            "track_endpoints": [],
            "do_not_track_endpoints": [],
            "validate_json": [],
            "internal": [],
            "persist_graphql": []
          },
          "global_headers": {},
          "global_headers_remove": [],
          "global_response_headers": {},
          "global_response_headers_remove": [],
          "ignore_endpoint_case": false,
          "global_size_limit": 0,
          "override_target": ""
        }
      }
    },
    "jwt_scope_claim_name": "",
    "use_standard_auth": false,
    "session_lifetime": 0,
    "hmac_allowed_algorithms": [],
    "disable_rate_limit": false,
    "definition": {
      "enabled": false,
      "name": "",
      "default": "",
      "location": "header",
      "key": "x-api-version",
      "strip_path": false,
      "strip_versioning_data": false,
      "versions": {}
    },
    "use_oauth2": false,
    "jwt_source": "",
    "jwt_signing_method": "",
    "config_data_disabled": false,
    "jwt_not_before_validation_skew": 0,
    "use_go_plugin_auth": false,
    "jwt_identity_base_field": "",
    "allowed_ips": [],
    "request_signing": {
      "is_enabled": false,
      "secret": "",
      "key_id": "",
      "algorithm": "",
      "header_list": [],
      "certificate_id": "",
      "signature_header": ""
    },
    "org_id": "60dc2ae33ff411a0ddd459d9",
    "enable_ip_whitelisting": false,
    "global_rate_limit": {
      "rate": 0,
      "per": 0
    },
    "protocol": "",
    "enable_context_vars": false,
    "tags": [],
    "basic_auth": {
      "disable_caching": false,
      "cache_ttl": 0,
      "extract_from_body": false,
      "body_user_regexp": "",
      "body_password_regexp": ""
    },
    "listen_port": 0,
    "session_provider": {
      "name": "",
      "storage_engine": "",
      "meta": {}
    },
    "auth_configs": {
      "authToken": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "basic": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "coprocess": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "hmac": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "jwt": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "oauth": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      },
      "oidc": {
        "disable_header": false,
        "auth_header_name": "Authorization",
        "cookie_name": "",
        "name": "",
        "validate_signature": false,
        "use_param": false,
        "signature": {
          "algorithm": "",
          "header": "",
          "use_param": false,
          "param_name": "",
          "secret": "",
          "allowed_clock_skew": 0,
          "error_code": 0,
          "error_message": ""
        },
        "use_cookie": false,
        "param_name": "",
        "use_certificate": false
      }
    },
    "custom_middleware_bundle_disabled": false,
    "strip_auth_data": false,
    "id": "646e4674b1821e0c26b3d4dd",
    "certificates": [],
    "enable_signature_checking": false,
    "use_openid": false,
    "internal": false,
    "jwt_skip_kid": false,
    "enable_batch_request_support": false,
    "enable_detailed_recording": false,
    "scopes": {
      "jwt": {},
      "oidc": {}
    },
    "response_processors": [],
    "use_mutual_tls_auth": false
  },
  "hook_references": [],
  "is_site": false,
  "sort_by": 0,
  "user_group_owners": [],
  "user_owners": []
}